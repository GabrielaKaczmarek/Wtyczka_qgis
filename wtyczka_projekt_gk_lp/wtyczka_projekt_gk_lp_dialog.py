# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\marci\AppData\Roaming\QGIS\QGIS3\profiles\default\python\plugins\wtyczka_projekt_gk_lp\wtyczka_projekt_gk_lp_dialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


"""
/***************************************************************************
 WtyczkaProjektGKLPDialog
                                 A QGIS plugin
 Uzyskanie przewyższenia i pól
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2023-06-07
        git sha              : $Format:%H$
        copyright            : (C) 2023 by Gabriela Kaczmarek, Liliana Pijewska
        email                : liliana.pijewska.stud@pw.edu.pl
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'wtyczka_projekt_gk_lp_dialog_base.ui'))


class WtyczkaProjektGKLPDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(WtyczkaProjektGKLPDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)
        self.pushButton_h.clicked.connect(self.wysokosc)
        self.pushButton_p.clicked.connect(self.pole)
        
        
    def wysokosc(self):
        warstwa = self.wybierz_warstwy.currentLayer()
        l_el = len(warstwa.selectedFeatures())
        if l_el == 2:
            NR = []
            X = []
            Y = []
            Z = []
            dane  = warstwa.selectedFeatures()
            for e in dane:
                nr = e["Nr"] 
                x = e["X"]
                y = e["Y"]
                z = e["Z"]
                NR.append(nr)
                X.append(x)
                Y.append(y)
                Z.append(z)
            H = Z[1]-Z[0]
            self.label_wyn_h.setText(f'Przewyższenie między punktem{NR[0]} a {NR[1]} wynosi {H:.3f} m')
        elif l_el< 2: 
            self.label_wyn_h.setText("Niewystarczająca ilosc punktów - wybierz dwa !")
        elif l_el > 2:
            self.label_wyn_h.setText("Nadliczbowa liczba punktów - wybierz dwa !")
            
    def pole(self):
        warstwa = self.wybierz_warstwy.currentLayer()
        l_el = len(warstwa.selectedFeatures())
        if l_el == 3: 
            X = []
            Y = []
            NR = []
            wsp = []
            dane = warstwa.selectedFeatures() 
            for e in dane:
                nr = e["Nr"] 
                x = e["X"]
                y = e["Y"]
                z = e["Z"]
                wsp.append((x,y))
                NR.append(nr)
            pole = 0
            n = len(wsp)
            for i in range(n):
                x0,y0 = wsp[(i - 1)% n]
                x1, y1 = wsp[i]
                x2, y2 = wsp[(i + 1) % n]  
                pole += (x1*(y2-y0))
            pole =abs(pole) / 2 
            self.label_wyn_p.setText(f'Pole powierzchni utworzone z punktów {NR} wynosi {pole:.3f} m^2')       
        elif l_el < 3: 
            self.label_wyn_p.setText("Niewystarczająca ilosc punktów - wybierz trzy !")
        elif l_el > 3:
            self.label_wyn_p.setText("Nadliczbowa liczba punktów - wybierz trzy !")